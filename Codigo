Codigo

//Aluno: Eduardo Fernando de Oliveira 
//Aluno: Claudio Oliveira 

//Bibliotecas
#include <ESP8266WiFi.h>
#include <PubSubClient.h> 


// Configuracoes da rede WiFi
const char* rede = "Monte Sinai"; 
const char* senha = "habacuque317";

// Configuracoes do broker MQTT
const char* mqtt_server = "test.mosquitto.org";
int mqtt_port = 1883;

WiFiClient espCliente;
PubSubClient client(espCliente); 
long lastMsg = 0;

char msg[50]; 
int value = 0; 


void setup() {

  pinMode(2, OUTPUT);
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);

}

 



void setup_wifi() {
  delay(10);
  
  Serial.println();
  Serial.print("Conectando a ");
  Serial.println(rede);

  
  WiFi.begin(rede, senha);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

 

  Serial.println("");
  Serial.println("WiFi conectado!");
  Serial.println("Endereço IP ESP: ");
  Serial.println(WiFi.localIP());
}


void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

  if ((char)payload[0] == '1') {
    Serial.println("HIGH");
    digitalWrite(2, HIGH);} 
  
  if ((char)payload[0] == '0') {
    Serial.println("LOW");
    digitalWrite(2, LOW); 
    }
}


// Funcao para conectar no broker MQTT
void reconnect() {
  // Loop until we’re reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection…");
    
      if (client.connect("ESP8266Cliente")) {
      Serial.println("conecteD");
      
      client.publish("batimentos", "teste topico");
      
      client.subscribe("batimentos");
    } else {
      Serial.print("failed, rc = ");
      Serial.print(client.state());}
      Serial.println(" try again in 5 seconds");
      
      delay(5000);
    }
  }



void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  Serial.println(analogRead(0));
  delay(20);

  long now = millis();
  if (now - lastMsg > 2000) {
    lastMsg = now;
    ++value;
    snprintf (msg, 75, "teste topico #%ld", value);
    Serial.print("Publish message: ");
    Serial.println(msg);
    client.publish("batimentos", msg);
  }
}
